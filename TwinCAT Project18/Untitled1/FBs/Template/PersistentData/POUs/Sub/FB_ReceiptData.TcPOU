<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_ReceiptData" Id="{bd549986-4a1b-42c0-a973-ba67529b4aa7}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ReceiptData
VAR_INPUT
	bSaveReceipt			: BOOL;
	bLoadReceipt			: BOOL;
	bDeleteReceipt			: BOOL;
	nSelectedRow			: INT;
	bHmiOk					: BOOL;
	bHmiCancel				: BOOL;
	sReceiptName			: STRING;
	sReceiptFolder			: STRING;
	pAdrrData				: PVOID;
	nLenData				: UDINT;
END_VAR
VAR_OUTPUT
	bBusy					: BOOL;
	bDone					: BOOL;
	bError					: BOOL;
	nErrorId				: UDINT;	
	sMessage				: STRING;
	aReceiptFileList		: ARRAY[0..nReceiptNum] OF STRING;
END_VAR
VAR
	(* List Receipt Files *)
	fbEnumFindFileList		: FB_EnumFindFileList;	
	stReceiptFileList		: ARRAY[0..nReceiptNum] OF ST_FindFileEntry;

	(* ReceiptList *)
	fbFileReadWrite			: FB_FileReadWrite;
	fbFileDelete			: FB_FileDelete;
	nFindReceiptListState	: INT;
	tonRefreshList			: Ton;
	nLocation				: INT;
	sFileName				: STRING(255);
	i_ReceiptFileList		: UINT;
	
	(* ReceiptState *)
	nReceiptState			: UDINT;
	bReceiptListBusy		: BOOL;
	bReceiptListDone		: BOOL;
	bReceiptListError		: BOOL;
	sFilePath				: STRING(255);
	sReceiptFileUnderOp		: STRING;
	tonMessageTimeout		: TON;
	bError_RecOp			: BOOL;
	Re_bHmiOk				: R_TRIG;
	Re_bHmiCancel			: R_TRIG;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[

(* R_TRIG --------------------------------------------------------------------------------------*)
	Re_bHmiOk(CLK:=bHmiOk);
	Re_bHmiCancel(CLK:=bHmiCancel);
(* R_TRIG --------------------------------------------------------------------------------------*)



(* FindReceiptList -----------------------------------------------------------------------------*)	
	CASE nFindReceiptListState OF
		
		0: (* Idle *)
			bReceiptListBusy:=FALSE;
			bReceiptListDone:=FALSE;
			tonRefreshList(IN:=NOT(tonRefreshList.Q) , PT:=T#3S , Q=> , ET=> );
			IF NOT(bBusy) AND tonRefreshList.Q THEN
				bReceiptListBusy:=TRUE;
				tonRefreshList(IN:=FALSE , PT:=T#3S , Q=> , ET=> );
				nFindReceiptListState:=10;
			END_IF	
			
	
		10: (* Refresh Receipt List *)
			fbEnumFindFileList(
				sNetId		:= '', 
				sPathName	:= CONCAT(sReceiptFolder,'*Backup.dat'), 
				eCmd		:= eEnumCmd_First, 
				pFindList	:= ADR(stReceiptFileList), 
				cbFindList	:= SIZEOF(stReceiptFileList), 
				bExecute	:= TRUE, 
				tTimeout	:= T#5S, 
				bBusy		=> , 
				bError		=> , 
				nErrID		=> , 
				bEOE		=> , 
				nFindFiles	=> );		
				
			IF NOT(fbEnumFindFileList.bError) THEN
				IF NOT(fbEnumFindFileList.bBusy) THEN	
					fbEnumFindFileList(
						sNetId		:= '', 
						sPathName	:= CONCAT(sReceiptFolder,'*Backup.dat'), 
						eCmd		:= eEnumCmd_First, 
						pFindList	:= ADR(stReceiptFileList), 
						cbFindList	:= SIZEOF(stReceiptFileList), 
						bExecute	:= FALSE, 
						tTimeout	:= T#5S, 
						bBusy		=> , 
						bError		=> , 
						nErrID		=> , 
						bEOE		=> , 
						nFindFiles	=> );			
					bReceiptListError:=FALSE;
					sMessage:='';
					nFindReceiptListState:=20;
				END_IF
			ELSE
				bReceiptListError:=TRUE;
				sMessage:='Receipt List could not be read';
				nFindReceiptListState:=9999;
			END_IF
		
			
		20:
			FOR i_ReceiptFileList:=0 TO nReceiptNum BY 1 DO
				nLocation:=FIND(stReceiptFileList[i_ReceiptFileList].sFileName,'Backup');
				IF nLocation<>0 THEN
					sFileName:=DELETE(stReceiptFileList[i_ReceiptFileList].sFileName,6,nLocation);
					nLocation:=FIND(sFileName,'.dat');
					aReceiptFileList[i_ReceiptFileList]:=DELETE(sFileName,4,nLocation);
				ELSE
					aReceiptFileList[i_ReceiptFileList]	:= '';
				END_IF
			END_FOR
			nFindReceiptListState:=100;
	
					
		100:
			bReceiptListDone:=TRUE;
			nFindReceiptListState:=0;
			
			
		9999:
			nFindReceiptListState:=0;

	END_CASE
(* FindReceiptList -----------------------------------------------------------------------------*)	



(* ReceiptState --------------------------------------------------------------------------------*)
	CASE nReceiptState OF
	
		0:
			bBusy:=FALSE;
			bDone:=FALSE;
			bError_RecOp:=FALSE;
			IF NOT(bReceiptListBusy OR bReceiptListError) THEN
				IF bLoadReceipt	THEN
					bBusy:=TRUE;
					nReceiptState:=100;
				ELSIF bSaveReceipt THEN
					bBusy:=TRUE;
					nReceiptState:=200;			
				ELSIF bDeleteReceipt THEN
					bBusy:=TRUE;
					nReceiptState:=300;			
				END_IF
			END_IF
				
			
		100: (* Load Receipt File *)			
			IF aReceiptFileList[nSelectedRow]<>'' THEN
				sReceiptFileUnderOp:=aReceiptFileList[nSelectedRow];
				sFilePath:=CONCAT(CONCAT(sReceiptFolder,aReceiptFileList[nSelectedRow]),'.dat');
				nReceiptState:=110;	
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=100;
				sMessage:='Receipt File is not selected';
				nReceiptState:=9999;	
			END_IF
		
			
		110: (* Loading Receipt OK / CANCEL *)
			sMessage:=CONCAT(CONCAT('Receipt : ',sReceiptFileUnderOp), ' will be loaded');	
			IF bHmiOK THEN
				nReceiptState:=120;	
			ELSIF bHmiCancel THEN
				sMessage:='Receipt Loading canceled';
				nReceiptState:=130;	
			END_IF
			
			
		120: (* Read File *)
			fbFileReadWrite(
				sFilePath		:= sFilePath, 
				bRead			:= TRUE, 
				bWrite			:= FALSE, 
				pAdrrData		:= pAdrrData, 
				nLenData		:= nLenData, 
				bBusy			=> , 
				bDone			=> , 
				bError			=> , 
				nErrorId		=> , 
				sMessage		=> , 
				tLastProcessTime=> );	
				
			IF NOT(fbFileReadWrite.bError) THEN
				IF fbFileReadWrite.bDone THEN
					fbFileReadWrite(
						sFilePath		:= sFilePath, 
						bRead			:= FALSE, 
						bWrite			:= FALSE, 
						pAdrrData		:= pAdrrData,
						nLenData		:= nLenData, 
						bBusy			=> , 
						bDone			=> , 
						bError			=> , 
						nErrorId		=> , 
						sMessage		=> , 
						tLastProcessTime=> );	
					bError_RecOp:=FALSE;
					nErrorId:=0;
					sMessage:='Receipt File is loaded';
					nReceiptState:=130;				
				END_IF
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=fbFileReadWrite.nErrorId;
				sMessage:=fbFileReadWrite.sMessage;
				nReceiptState:=9999;	
			END_IF
				
			
		130: (* Message *)
			bDone:=TRUE;
			tonMessageTimeout(IN:=TRUE , PT:=T#5S , Q=> , ET=> );
			IF NOT(bLoadReceipt) AND tonMessageTimeout.Q OR Re_bHmiOk.Q OR Re_bHmiCancel.Q THEN
				tonMessageTimeout(IN:=FALSE , PT:=T#5S , Q=> , ET=> );
				sMessage:='';
				nReceiptState:=0;		
			END_IF
		
			
		200: (* Save Receipt File *)
			IF sReceiptName<>'' THEN
				sFilePath:=CONCAT(sReceiptFolder,CONCAT(sReceiptName,'.dat'));
				sReceiptFileUnderOp:=sReceiptName;
				nReceiptState:=210;	
			ELSE
				IF aReceiptFileList[nSelectedRow]<>'' THEN
					sFilePath:=CONCAT(sReceiptFolder,CONCAT(aReceiptFileList[nSelectedRow],'.dat'));
					sReceiptFileUnderOp:=aReceiptFileList[nSelectedRow];
					sReceiptName:=aReceiptFileList[nSelectedRow];
					nReceiptState:=210;	
				ELSE	
					bError_RecOp:=TRUE;
					nErrorId:=200;
					sMessage:='Receipt File Name is not valid';
					nReceiptState:=9999;
				END_IF
			END_IF
							

		210: (* Message *)
			sMessage:=CONCAT(CONCAT('Receipt : ',sReceiptFileUnderOp), ' will be saved');	
			IF bHmiOK THEN
				nReceiptState:=220;	
			ELSIF bHmiCancel THEN
				sMessage:='Receipt Saving canceled';
				nReceiptState:=250;	
			END_IF

		
		220: (* Write File *)
			fbFileReadWrite(
				sFilePath		:= sFilePath, 
				bRead			:= FALSE, 
				bWrite			:= TRUE, 
				pAdrrData		:= pAdrrData, 
				nLenData		:= nLenData, 
				bBusy			=> , 
				bDone			=> , 
				bError			=> , 
				nErrorId		=> , 
				sMessage		=> , 
				tLastProcessTime=> );	

			IF NOT(fbFileReadWrite.bError) THEN
				IF fbFileReadWrite.bDone THEN
					fbFileReadWrite(
						sFilePath		:= sFilePath, 
						bRead			:= FALSE, 
						bWrite			:= FALSE, 
						pAdrrData		:= pAdrrData, 
						nLenData		:= nLenData, 
						bBusy			=> , 
						bDone			=> , 
						bError			=> , 
						nErrorId		=> , 
						sMessage		=> , 
						tLastProcessTime=> );		
					bError_RecOp:=FALSE;
					nErrorId:=0;	
					sMessage:='Receipt File is saved';				
					nReceiptState:=230;				
				END_IF
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=fbFileReadWrite.nErrorId;
				sMessage:=fbFileReadWrite.sMessage;
				nReceiptState:=9999;	
			END_IF
	
			
		230: (* Message *)
			IF sReceiptName<>'' THEN
				sFilePath:=CONCAT(sReceiptFolder,CONCAT(CONCAT(sReceiptName,'Backup'),'.dat'));
			ELSE
				sFilePath:=CONCAT(sReceiptFolder,CONCAT(CONCAT(aReceiptFileList[nSelectedRow],'Backup'),'.dat'));
			END_IF
			nReceiptState:=240;			
	
		
		240: (* Write Backup File *)
			fbFileReadWrite(
				sFilePath		:= sFilePath, 
				bRead			:= FALSE, 
				bWrite			:= TRUE, 
				pAdrrData		:= pAdrrData, 
				nLenData		:= nLenData, 
				bBusy			=> , 
				bDone			=> , 
				bError			=> , 
				nErrorId		=> , 
				sMessage		=> , 
				tLastProcessTime=> );	

			IF NOT(fbFileReadWrite.bError) THEN
				IF fbFileReadWrite.bDone THEN
					fbFileReadWrite(
						sFilePath		:= sFilePath, 
						bRead			:= FALSE, 
						bWrite			:= FALSE, 
						pAdrrData		:= pAdrrData, 
						nLenData		:= nLenData, 
						bBusy			=> , 
						bDone			=> , 
						bError			=> , 
						nErrorId		=> , 
						sMessage		=> , 
						tLastProcessTime=> );					
					bError_RecOp:=FALSE;
					nErrorId:=0;		
					sMessage:='Receipt File is saved'; (* Receipt and Backup Files are saved *)
					nReceiptState:=250;				
				END_IF
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=fbFileReadWrite.nErrorId;
				sMessage:=fbFileReadWrite.sMessage;
				nReceiptState:=9999;	
			END_IF	
				
				
		250: (* Message *)
			bDone:=TRUE;
			tonMessageTimeout(IN:=TRUE , PT:=T#5S , Q=> , ET=> );
			IF NOT(bSaveReceipt) AND tonMessageTimeout.Q OR Re_bHmiOk.Q OR Re_bHmiCancel.Q  THEN
				tonMessageTimeout(IN:=FALSE , PT:=T#5S , Q=> , ET=> );
				sMessage:='';
				nReceiptState:=0;		
			END_IF			
		
			
		300: (* Delete Receipt File *)					
			IF aReceiptFileList[nSelectedRow]<>'' THEN
				sReceiptFileUnderOp:=aReceiptFileList[nSelectedRow];
				sFilePath:=CONCAT(CONCAT(sReceiptFolder,aReceiptFileList[nSelectedRow]),'.dat');
				nReceiptState:=310;	
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=300;
				sMessage:='Receipt File is not selected';
				nReceiptState:=9999;	
			END_IF			
			
			
		310: (* Message *)
			sMessage:=CONCAT(CONCAT('Receipt : ',sReceiptFileUnderOp), ' will be deleted');	
			IF bHmiOK THEN
				nReceiptState:=320;	
			ELSIF bHmiCancel THEN
				sMessage:='Receipt Deleting canceled';
				nReceiptState:=350;	
			END_IF	
					
			
		320: (* Delete Receipt File *)
			fbFileDelete(
				sNetId		:= '', 
				sPathName	:= sFilePath, 
				ePath		:= , 
				bExecute	:= TRUE, 
				tTimeout	:= , 
				bBusy		=> , 
				bError		=> , 
				nErrId		=> );
			
			IF NOT(fbFileDelete.bError) THEN
				IF NOT(fbFileDelete.bBusy) THEN
					fbFileDelete(
						sNetId		:= '', 
						sPathName	:= sFilePath, 
						ePath		:= , 
						bExecute	:= FALSE, 
						tTimeout	:= , 
						bBusy		=> , 
						bError		=> , 
						nErrId		=> );	
					bError_RecOp:=FALSE;
					nErrorId:=0;
					sMessage:='Receipt File is deleted';
					nReceiptState:=330;	
				END_IF
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=fbFileDelete.nErrId;
				sMessage:='Receipt File Deleting Error';
				nReceiptState:=9999;
			END_IF
			
			
		330: (* Message *)		
			sFilePath:=CONCAT(CONCAT(sReceiptFolder,CONCAT(aReceiptFileList[nSelectedRow],'Backup')),'.dat');	
			nReceiptState:=340;	
	
			
		340: (* Delete Backup File *)	
			fbFileDelete(
				sNetId		:= '', 
				sPathName	:= sFilePath, 
				ePath		:= , 
				bExecute	:= TRUE, 
				tTimeout	:= , 
				bBusy		=> , 
				bError		=> , 
				nErrId		=> );
			
			IF NOT(fbFileDelete.bError) THEN
				IF NOT(fbFileDelete.bBusy) THEN
					fbFileDelete(
						sNetId		:= '', 
						sPathName	:= sFilePath, 
						ePath		:= , 
						bExecute	:= FALSE, 
						tTimeout	:= , 
						bBusy		=> , 
						bError		=> , 
						nErrId		=> );	
					bError_RecOp:=FALSE;
					nErrorId:=0;
					sMessage:='Receipt File is deleted';	(* Receipt and Backup Files are deleted *)
					nReceiptState:=350;	
				END_IF
			ELSE
				bError_RecOp:=TRUE;
				nErrorId:=fbFileDelete.nErrId;
				sMessage:='Receipt Backup File Deleting Error';
				nReceiptState:=9999;
			END_IF
		
				
		350: (* Message *)
			bDone:=TRUE;
			tonMessageTimeout(IN:=TRUE , PT:=T#5S , Q=> , ET=> );
			IF NOT(bDeleteReceipt) AND tonMessageTimeout.Q OR Re_bHmiOk.Q OR Re_bHmiCancel.Q  THEN
				tonMessageTimeout(IN:=FALSE , PT:=T#5S , Q=> , ET=> );
				sMessage:='';
				nReceiptState:=0;		
			END_IF			

		
					
		9999:(* Error *)
			fbFileReadWrite(
				sFilePath		:= sFilePath, 
				bRead			:= FALSE, 
				bWrite			:= FALSE, 
				pAdrrData		:= pAdrrData, 
				nLenData		:= nLenData, 
				bBusy			=> , 
				bDone			=> , 
				bError			=> , 
				nErrorId		=> , 
				sMessage		=> , 
				tLastProcessTime=> );	
				
			fbFileDelete(
				sNetId		:= '', 
				sPathName	:= sFilePath, 
				ePath		:= , 
				bExecute	:= FALSE, 
				tTimeout	:= , 
				bBusy		=> , 
				bError		=> , 
				nErrId		=> );		
		
			tonMessageTimeout(IN:=TRUE , PT:=T#5S , Q=> , ET=> );			
				
			IF	NOT(fbFileReadWrite.bBusy OR fbFileDelete.bBusy)
				AND NOT(bSaveReceipt OR bLoadReceipt OR bDeleteReceipt) 
				AND (tonMessageTimeout.Q OR bHmiOK OR bHmiCancel)
			THEN
				tonMessageTimeout(IN:=FALSE , PT:=T#5S , Q=> , ET=> );		
				sMessage:='';	
				nReceiptState:=0;		
			END_IF				
	
	END_CASE
(* ReceiptState --------------------------------------------------------------------------------*)	



(* Error ---------------------------------------------------------------------------------------*)
	bError	:= (bError_RecOp OR bReceiptListError);
(* Error ---------------------------------------------------------------------------------------*)
		
		
		









]]></ST>
    </Implementation>
    <LineIds Name="FB_ReceiptData">
      <LineId Id="931" Count="1" />
      <LineId Id="926" Count="2" />
      <LineId Id="32" Count="0" />
      <LineId Id="933" Count="0" />
      <LineId Id="671" Count="0" />
      <LineId Id="33" Count="2" />
      <LineId Id="89" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="215" Count="0" />
      <LineId Id="94" Count="1" />
      <LineId Id="203" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="102" Count="2" />
      <LineId Id="674" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="112" Count="11" />
      <LineId Id="105" Count="0" />
      <LineId Id="220" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="129" Count="11" />
      <LineId Id="127" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="830" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="218" Count="0" />
      <LineId Id="825" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="107" Count="0" />
      <LineId Id="673" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="155" Count="2" />
      <LineId Id="204" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="159" Count="0" />
      <LineId Id="672" Count="0" />
      <LineId Id="208" Count="1" />
      <LineId Id="206" Count="0" />
      <LineId Id="210" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="670" Count="0" />
      <LineId Id="177" Count="2" />
      <LineId Id="183" Count="1" />
      <LineId Id="589" Count="0" />
      <LineId Id="492" Count="0" />
      <LineId Id="832" Count="0" />
      <LineId Id="824" Count="0" />
      <LineId Id="185" Count="0" />
      <LineId Id="493" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="193" Count="0" />
      <LineId Id="494" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="591" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="594" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="722" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="303" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="664" Count="2" />
      <LineId Id="306" Count="0" />
      <LineId Id="304" Count="0" />
      <LineId Id="226" Count="0" />
      <LineId Id="593" Count="0" />
      <LineId Id="724" Count="0" />
      <LineId Id="728" Count="0" />
      <LineId Id="725" Count="0" />
      <LineId Id="729" Count="0" />
      <LineId Id="731" Count="0" />
      <LineId Id="738" Count="0" />
      <LineId Id="732" Count="0" />
      <LineId Id="730" Count="0" />
      <LineId Id="726" Count="1" />
      <LineId Id="190" Count="0" />
      <LineId Id="309" Count="11" />
      <LineId Id="592" Count="0" />
      <LineId Id="308" Count="0" />
      <LineId Id="321" Count="0" />
      <LineId Id="328" Count="11" />
      <LineId Id="627" Count="1" />
      <LineId Id="640" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="638" Count="0" />
      <LineId Id="641" Count="1" />
      <LineId Id="639" Count="0" />
      <LineId Id="327" Count="0" />
      <LineId Id="322" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="595" Count="0" />
      <LineId Id="341" Count="0" />
      <LineId Id="380" Count="0" />
      <LineId Id="734" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="736" Count="0" />
      <LineId Id="826" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="344" Count="1" />
      <LineId Id="388" Count="0" />
      <LineId Id="381" Count="0" />
      <LineId Id="389" Count="0" />
      <LineId Id="382" Count="0" />
      <LineId Id="744" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="383" Count="0" />
      <LineId Id="621" Count="0" />
      <LineId Id="606" Count="0" />
      <LineId Id="879" Count="0" />
      <LineId Id="745" Count="0" />
      <LineId Id="626" Count="0" />
      <LineId Id="622" Count="0" />
      <LineId Id="676" Count="1" />
      <LineId Id="625" Count="0" />
      <LineId Id="623" Count="1" />
      <LineId Id="391" Count="0" />
      <LineId Id="619" Count="0" />
      <LineId Id="740" Count="1" />
      <LineId Id="746" Count="5" />
      <LineId Id="742" Count="1" />
      <LineId Id="739" Count="0" />
      <LineId Id="385" Count="0" />
      <LineId Id="398" Count="25" />
      <LineId Id="629" Count="1" />
      <LineId Id="424" Count="0" />
      <LineId Id="646" Count="0" />
      <LineId Id="426" Count="1" />
      <LineId Id="643" Count="2" />
      <LineId Id="428" Count="1" />
      <LineId Id="395" Count="0" />
      <LineId Id="392" Count="0" />
      <LineId Id="386" Count="0" />
      <LineId Id="444" Count="0" />
      <LineId Id="613" Count="1" />
      <LineId Id="616" Count="1" />
      <LineId Id="491" Count="0" />
      <LineId Id="487" Count="1" />
      <LineId Id="490" Count="0" />
      <LineId Id="454" Count="27" />
      <LineId Id="632" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="650" Count="0" />
      <LineId Id="483" Count="1" />
      <LineId Id="647" Count="2" />
      <LineId Id="485" Count="1" />
      <LineId Id="453" Count="0" />
      <LineId Id="448" Count="0" />
      <LineId Id="452" Count="0" />
      <LineId Id="430" Count="1" />
      <LineId Id="752" Count="0" />
      <LineId Id="432" Count="0" />
      <LineId Id="753" Count="0" />
      <LineId Id="827" Count="0" />
      <LineId Id="433" Count="0" />
      <LineId Id="387" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="499" Count="0" />
      <LineId Id="513" Count="1" />
      <LineId Id="767" Count="0" />
      <LineId Id="515" Count="1" />
      <LineId Id="667" Count="2" />
      <LineId Id="517" Count="1" />
      <LineId Id="508" Count="0" />
      <LineId Id="512" Count="0" />
      <LineId Id="754" Count="0" />
      <LineId Id="760" Count="6" />
      <LineId Id="755" Count="1" />
      <LineId Id="596" Count="0" />
      <LineId Id="434" Count="0" />
      <LineId Id="500" Count="7" />
      <LineId Id="435" Count="2" />
      <LineId Id="519" Count="0" />
      <LineId Id="526" Count="7" />
      <LineId Id="654" Count="2" />
      <LineId Id="633" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="651" Count="2" />
      <LineId Id="523" Count="1" />
      <LineId Id="520" Count="0" />
      <LineId Id="438" Count="0" />
      <LineId Id="549" Count="4" />
      <LineId Id="597" Count="0" />
      <LineId Id="563" Count="20" />
      <LineId Id="661" Count="2" />
      <LineId Id="584" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="586" Count="0" />
      <LineId Id="657" Count="3" />
      <LineId Id="587" Count="0" />
      <LineId Id="562" Count="0" />
      <LineId Id="560" Count="0" />
      <LineId Id="554" Count="0" />
      <LineId Id="439" Count="0" />
      <LineId Id="544" Count="0" />
      <LineId Id="768" Count="0" />
      <LineId Id="545" Count="0" />
      <LineId Id="769" Count="0" />
      <LineId Id="828" Count="0" />
      <LineId Id="546" Count="1" />
      <LineId Id="598" Count="0" />
      <LineId Id="548" Count="0" />
      <LineId Id="442" Count="0" />
      <LineId Id="349" Count="0" />
      <LineId Id="363" Count="10" />
      <LineId Id="362" Count="0" />
      <LineId Id="543" Count="0" />
      <LineId Id="535" Count="7" />
      <LineId Id="377" Count="0" />
      <LineId Id="771" Count="0" />
      <LineId Id="770" Count="0" />
      <LineId Id="378" Count="0" />
      <LineId Id="497" Count="0" />
      <LineId Id="600" Count="0" />
      <LineId Id="772" Count="0" />
      <LineId Id="601" Count="0" />
      <LineId Id="773" Count="0" />
      <LineId Id="829" Count="0" />
      <LineId Id="498" Count="0" />
      <LineId Id="376" Count="0" />
      <LineId Id="182" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="821" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="822" Count="0" />
      <LineId Id="299" Count="2" />
      <LineId Id="46" Count="8" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>